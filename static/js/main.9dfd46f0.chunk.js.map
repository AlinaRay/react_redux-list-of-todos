{"version":3,"sources":["redux/loading.js","redux/todosData.js","store.js","components/util/TodoApi.js","components/util/UserApi.js","components/user/User.js","components/todo-item/TodoItem.js","components/todo-list/TodoList.js","App.js","index.js"],"names":["loadingReducer","state","arguments","length","undefined","type","sortedTodosReducer","action","_state$sortedTodos","sortedTodos","_state$initialTodos","initialTodos","_state$sortField","sortField","fieldDirection","newSortDirection","name","todos","_objectSpread","filter","todo","id","Object","toConsumableArray","sort","a","b","title","localeCompare","user","completed","reducer","combineReducers","isLoading","todosData","todosReducer","store","createStore","getAllTodos","fetch","then","response","json","getAllUsers","User","_ref","react_default","createElement","TodoItem","text","removeTodo","className","htmlFor","checked","readOnly","user_User","key","aria-label","onClick","aria-hidden","mapDispatch","sortByCompleted","sortByTitle","sortByUser","connect","fieldName","sortOrderArrow","defaultSortArrow","scope","map","item","todo_item_TodoItem","startLoading","finishLoading","setTodos","loadData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref3","_ref4","todoList","users","items","wrap","_context","prev","next","Promise","all","sent","slicedToArray","getTodosWithUsers","stop","apply","this","App_objectSpread","find","userId","todo_list_TodoList","disabled","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9dfd46f0.chunk.js","sourcesContent":["const START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const finishLoading = () => ({\n  type: FINISH_LOADING,\n});\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case FINISH_LOADING:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","export const SORT_ORDER_COMPLETED = 'SORT_COMPLETED';\nexport const SORT_ORDER_TITLE = 'SORT_TITLE';\nexport const SORT_ORDER_USER = 'SORT_USER';\nexport const SET_TODOS = 'SET_TODOS';\nconst REMOVE_TODO = 'REMOVE_TODO';\n\nexport const setTodos = todos => ({\n  type: SET_TODOS,\n  todos,\n});\n\nexport const removeTodo = id => ({\n  type: REMOVE_TODO,\n  id,\n});\n\nexport const sortByCompleted = () => ({\n  type: SORT_ORDER_COMPLETED,\n});\n\nexport const sortByTitle = () => ({\n  type: SORT_ORDER_TITLE,\n});\n\nexport const sortByUser = () => ({\n  type: SORT_ORDER_USER,\n});\n\nconst sortedTodosReducer = (state = [], action) => {\n  const { sortedTodos = [], initialTodos = [], sortField: { fieldDirection } = 1 } = state;\n  const newSortDirection = fieldDirection === 1 ? -1 : 1;\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        sortField: {\n          name: '',\n          fieldDirection: 1,\n        },\n        sortedTodos: action.todos,\n        initialTodos: action.todos,\n      };\n    case REMOVE_TODO:\n      return {\n        ...state,\n        sortedTodos: sortedTodos\n          .filter(todo => todo.id !== action.id),\n        initialTodos: initialTodos\n          .filter(todo => todo.id !== action.id),\n      };\n    case SORT_ORDER_TITLE:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => a.title.localeCompare(b.title)\n            * fieldDirection),\n      };\n    case SORT_ORDER_USER:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)\n            * fieldDirection),\n      };\n    case SORT_ORDER_COMPLETED:\n      return {\n        ...state,\n        sortField: {\n          name: action.type,\n          fieldDirection: newSortDirection,\n        },\n        sortedTodos: [...initialTodos]\n          .sort((a, b) => (b.completed - a.completed)\n            * fieldDirection),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sortedTodosReducer;\n","import { createStore, combineReducers } from 'redux';\nimport loadingReducer from './redux/loading';\nimport todosReducer from './redux/todosData';\n\nconst reducer = combineReducers({\n  isLoading: loadingReducer,\n  todosData: todosReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","const getAllTodos = () => fetch('https://jsonplaceholder.typicode.com/todos')\n  .then(response => response.json());\n\nexport default getAllTodos;\n","const getAllUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json());\n\nexport default getAllUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => (\n  <span>{name}</span>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../user/User';\n\nconst TodoItem = ({\n  id, text, completed, user, removeTodo,\n}) => (\n  <tr\n    className=\"item\"\n  >\n    <td>\n      <label\n        className=\"label d-flex justify-content-center align-items-center\"\n        htmlFor=\"checkbox\"\n      >\n        <input\n          type=\"checkbox\"\n          id=\"checkbox\"\n          checked={completed}\n          readOnly\n        />\n      </label>\n    </td>\n    <td>\n      <span className=\"label\">{text}</span>\n    </td>\n    <td>\n      <User\n        key={user.id}\n        name={user.name}\n      />\n    </td>\n    <td className=\"d-flex justify-content-center align-items-center\">\n      <button\n        type=\"button\"\n        className=\"close\"\n        aria-label=\"Close\"\n        onClick={() => removeTodo(id)}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number,\n  text: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.object,\n  removeTodo: PropTypes.func,\n}.isRequired;\n\nexport default TodoItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../todo-item/TodoItem';\nimport {\n  sortByCompleted, sortByTitle, sortByUser, removeTodo,\n  SORT_ORDER_COMPLETED, SORT_ORDER_TITLE, SORT_ORDER_USER,\n} from '../../redux/todosData';\n\nconst TodoList = ({\n// eslint-disable-next-line no-shadow\n  sortByUser, sortByCompleted, sortByTitle, removeTodo,\n  sortedTodos, fieldDirection, fieldName,\n}) => {\n  const sortOrderArrow = fieldDirection === 1\n    ? <span>&#8595;</span>\n    : <span>&#8593;</span>;\n  const defaultSortArrow = <span>&#11021;</span>;\n\n  return (\n    <table className=\"table table-striped\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th\n            scope=\"col\"\n            className=\"text-center\"\n            onClick={sortByCompleted}\n          >\n            <span className=\"mr-3\">Status</span>\n            <span>\n              {fieldName === SORT_ORDER_COMPLETED\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n          <th\n            scope=\"col\"\n            onClick={sortByTitle}\n          >\n            <span className=\"mr-3\">Task</span>\n            <span>\n              {fieldName === SORT_ORDER_TITLE\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n          <th\n            scope=\"col\"\n            onClick={sortByUser}\n          >\n            <span className=\"mr-3\">User</span>\n            <span>\n              {fieldName === SORT_ORDER_USER\n                ? sortOrderArrow\n                : defaultSortArrow}\n            </span>\n          </th>\n          <th scope=\"col\">\n            <span className=\"text-center\">Remove</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedTodos.map((item) => {\n          const {\n            id, completed, title, user,\n          } = item;\n          return (\n            <TodoItem\n              key={id}\n              completed={completed}\n              id={id}\n              text={title}\n              user={user}\n              removeTodo={removeTodo}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapState = state => ({\n  sortedTodos: state.todosData.sortedTodos,\n  fieldDirection: state.todosData.sortField.fieldDirection,\n  fieldName: state.todosData.sortField.name,\n});\n\nconst mapDispatch = {\n  sortByCompleted, sortByTitle, sortByUser, removeTodo,\n};\n\nTodoList.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldDirection: PropTypes.number.isRequired,\n  sortByCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  sortByTitle: PropTypes.func.isRequired,\n  sortByUser: PropTypes.func.isRequired,\n  sortedTodos: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(Array),\n  ]).isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(TodoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getAllTodos from './components/util/TodoApi';\nimport getAllUsers from './components/util/UserApi';\nimport TodoList from './components/todo-list/TodoList';\n\nimport { startLoading, finishLoading } from './redux/loading';\nimport { setTodos } from './redux/todosData';\n\nconst App = ({\n// eslint-disable-next-line no-shadow\n  isLoading, startLoading, setTodos, finishLoading, todos,\n}) => {\n  const loadData = async() => {\n    startLoading();\n\n    const [todoList, users] = await Promise.all([\n      getAllTodos(),\n      getAllUsers(),\n    ]);\n    const items = getTodosWithUsers(todoList, users);\n\n    setTodos(items);\n    finishLoading();\n  };\n\n  const getTodosWithUsers = (todoList, users) => todoList.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n  return (\n    <div\n      className=\"d-flex flex-column align-items-center justify-content-center \"\n    >\n      <h1 className=\"text-center mb-3 mt-3\">React dynamic list of todos</h1>\n      { todos ? (\n        <TodoList />\n      ) : (\n        <button\n          type=\"button\"\n          onClick={loadData}\n          className=\"btn btn-dark btn-lg\"\n          disabled={isLoading}\n        >\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapState = state => ({\n  isLoading: state.isLoading,\n  todos: state.todosData.initialTodos || '',\n});\n\nconst mapDispatch = {\n  startLoading, finishLoading, setTodos,\n};\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  startLoading: PropTypes.func.isRequired,\n  finishLoading: PropTypes.func.isRequired,\n  setTodos: PropTypes.func.isRequired,\n  todos: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.instanceOf(Array),\n  ]).isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}